<Page
  x:Class="Samples.ValidationPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
  mc:Ignorable="d">

  <Page.Resources>
    <!--<DataTemplate x:Key="textBoxInError">
      <ItemsControl ItemsSource="{Binding Path=(InputValidation.Errors)}">
        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <TextBlock Text="{x:Bind ErrorMessage}" />
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ItemsControl>
    </DataTemplate>-->
    <!--<Style x:Key="textBoxInError" TargetType="Control">
      <Setter Property="Validation.ErrorTemplate">
        <Setter.Value>
          <ControlTemplate>
            <DockPanel>
              <TextBlock
                DockPanel.Dock="Left"
                FontWeight="Bold"
                Foreground="Red">
                *
              </TextBlock>
              <TextBlock
                DockPanel.Dock="Bottom"
                Foreground="Red"
                Text="{Binding ErrorContent}" />
              <Border BorderBrush="Red" BorderThickness="2">
                <AdornedElementPlaceholder />
              </Border>
            </DockPanel>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="Validation.HasError" Value="True">
          <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
        </Trigger>
      </Style.Triggers>
    </Style>-->
  </Page.Resources>
  <StackPanel Margin="0,25,0,0">
    <TextBlock
      Margin="10,0,10,5"
      Text="This input uses Binding.twoWayIfValid, which only dispatches messages when the input is valid. The model never knows about any invalid values in this field, and therefore it cannot easily be used in the button's canExecute."
      TextWrapping="Wrap" />
    <TextBox
      Width="150"
      Margin="0,5,0,25"
      Style="{StaticResource textBoxInError}"
      Text="{Binding Field1, UpdateSourceTrigger=PropertyChanged}" />
    <TextBlock
      Margin="10,0,10,5"
      Text="This input uses Binding.twoWayValidate, and the model is updated for each change. It can easily be used in the button's canExecute."
      TextWrapping="Wrap" />
    <TextBox
      Width="150"
      Margin="0,5,0,25"
      Style="{StaticResource textBoxInError}"
      Text="{Binding Field2, UpdateSourceTrigger=PropertyChanged}" />
    <Button
      Width="50"
      Margin="0,5,10,5"
      Command="{Binding Submit}"
      Content="Submit" />
  </StackPanel>
</Page>
